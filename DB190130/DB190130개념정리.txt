
#자바 응용 프로그램과 JDBC의 연결

Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/DB이름", "root", "비밀번호");
 -DriverManager는 자바 어플리케이션을 JDBC드라이버에 연결시켜주는 클래스로서 getConnection() 메소드로 
  DB에 연결하여 Connection 객체를 반환한다.

#Statement 클래스(정적 쿼리)

-SQL문을 실행하기 위해서는 Statement클래스를 이용한다.
-주요 메소드
 *Resultset executeQuery(String sql): 주어진 SQL 문을 실행하고 결과는 ResultSet 객체에 반환 한다.
  -> 데이터 검색을 위해 executeQuery() 메소드를 주로 사용한다.

 *int executeUpdate(String sql): INSERT, UPDATE, 또는 DELETE와 같은 SQL 문을 실행하고 SQL문 실행 으로 영햘을 받은
                                        행의 개수나 0을 반환한다. -> 추가 수정 삭제와 같은 변경시 사용

#PreparedStatement 객체

SQL문에서 Statement객체를 사용해도 되지만,Statement객체의 경우 중복코드가 많아지는 단점이 있다.
PreparedStatement 객체를 이용하는 주된 이유는 값 변환을 자동으로 한다는 점과 간결한 코드 사용에 있다.
PreparedStatement를 사용하는 순서는 다음과 같다.
1.Connection.preparedStatement()메소드를 사용하여 PreparedStatement 생성
2.PreparedStatement의 set 메소드를 사용하여 필요한 값 지정.
3.PreparedStatement의 executeQuery()또는 executeUpdate() 메소드를 사용하여 쿼리를 실행
4.finally 블록에서 사용한 PreparedStatement를 close() 메소드로 닫자.

#ResultSet 클래스

-SQL문 실행 결과를 얻어오기 위해서는 ResultSet 클래스를 이용한다.
-현재 데이터의 행(레코드 위치)을 가리키는 커서(cursor)을 관리
-커서의 초기값은 첫 번째 이전을 가리킴.

*getXXX()메소드: 해당 데이터 타입으로 '열'값을 읽어온다. 모든 데이터 타입에 대해 getString()으로 읽어 올 수 있으나
                      사용 할 때에는 해당하는 '데이터 타입' 으로 변환하여 사용하도록 한다. 끝에 close()해주기
